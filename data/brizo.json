{
  "definitions":{

  },
  "info":{
    "title":"Brizo",
    "version":"1.0"
  },
  "paths":{
    "/api/v1/brizo/services/access/initialize":{
      "post":{
        "consumes":[
          "application/json"
        ],
        "description":"",
        "parameters":[
          {
            "description":"Service agreement initialization.",
            "in":"body",
            "name":"body",
            "required":true,
            "schema":{
              "properties":{
                "consumerAddress":{
                  "description":"Consumer address.",
                  "example":"0x00a329c0648769A73afAc7F9381E08FB43dBEA72",
                  "type":"string"
                },
                "did":{
                  "description":"Identifier of the asset registered in ocean.",
                  "example":"did:op:08a429b8529856d59867503f8056903a680935a76950bb9649785cc97869a43d",
                  "type":"string"
                },
                "serviceAgreementId":{
                  "description":"Identifier of the service agreement.",
                  "example":"bb23s87856d59867503f80a690357406857698570b964ac8dcc9d86da4ada010",
                  "type":"string"
                },
                "serviceDefinitionId":{
                  "description":"Identifier of the service definition.",
                  "example":"0",
                  "type":"string"
                },
                "signature":{
                  "description":"Signature",
                  "example":"cade376598342cdae231321a0097876aeda656a567a67c6767fd8710129a9dc1",
                  "type":"string"
                }
              },
              "required":[
                "did",
                "serviceAgreementId",
                "serviceDefinitionId",
                "signature",
                {
                  "consumerAddress":null
                }
              ],
              "type":"object"
            }
          }
        ],
        "responses":{
          "201":{
            "description":"Service agreement initialize successfully."
          },
          "400":{
            "description":"One of the required attributes is missed."
          },
          "404":{
            "description":"Invalid signature."
          },
          "500":{
            "description":"Error"
          }
        },
        "summary":"Initialize the SLA between the puvblisher and the consumer.",
        "tags":[
          "services"
        ]
      }
    },
    "/api/v1/brizo/services/compute":{
      "post":{
        "consumes":[
          "application/json"
        ],
        "description":"<br/><br/>If the publisher of the assets<br/>provide this service in the Service agreement related with the asset_did requested.<br/>",
        "parameters":[
          {
            "description":"Asset metadata.",
            "in":"body",
            "name":"body",
            "required":true,
            "schema":{
              "properties":{
                "algorithm_did":{
                  "description":"Identifier of the algorithm to execute",
                  "example":"0x0234242345",
                  "type":"string"
                },
                "asset_did":{
                  "description":"Identifier of the asset registered in ocean",
                  "example":"0x0234242345",
                  "type":"string"
                },
                "consumer_wallet":{
                  "description":"Address of the wallet of the consumer of the asset. Ex. data-science...",
                  "example":"0x0234242345",
                  "type":"string"
                },
                "cpu":{
                  "description":"Number of cpus to execute the algorithm.",
                  "example":1,
                  "type":"integer"
                },
                "docker_image":{
                  "description":"Docker image where the algorithm is going to be executed. It must include all the libraries needs to run it.",
                  "example":"python:3.6-alpine",
                  "type":"string"
                },
                "memory":{
                  "description":"Ammout of memory in Gb to run the algorithm",
                  "example":1.5,
                  "type":"number"
                }
              },
              "required":[
                "asset_did",
                "algorithm_did",
                "consumer_wallet"
              ],
              "type":"object"
            }
          }
        ],
        "responses":{

        },
        "summary":"Allows to execute an algorithm inside in a docker instance in the cloud aquarius.",
        "tags":[
          "services"
        ]
      }
    },
    "/api/v1/brizo/services/consume":{
      "get":{
        "consumes":[
          "application/json"
        ],
        "description":"",
        "parameters":[
          {
            "description":"The consumer address.",
            "in":"query",
            "name":"consumerAddress",
            "required":true,
            "type":"string"
          },
          {
            "description":"The service agreement id.",
            "in":"query",
            "name":"serviceAgreementId",
            "required":true,
            "type":"string"
          },
          {
            "description":"This URL is only valid if BRIZO acts as a proxy. Consumer can't download using the URL if it's not through Brizo.",
            "in":"query",
            "name":"url",
            "required":true,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"Download valid url."
          },
          "400":{
            "description":"One of the required attributes is missed."
          },
          "404":{
            "description":"Invalid asset data."
          },
          "500":{
            "description":"Error"
          }
        },
        "summary":"Allows download of asset data file.",
        "tags":[
          "services"
        ]
      }
    }
  },
  "swagger":"2.0"
}
